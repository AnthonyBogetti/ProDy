name: CI

on:
  - push
  - pull_request
  - workflow_dispatch

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: ["3.10", "3.11", "3.12"]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Miniforge
        uses: conda-incubator/setup-miniconda@v2
        with:
          miniforge-version: "latest"
          python-version: ${{ matrix.python-version }}
          activate-environment: test
          auto-update-conda: true
          channels: conda-forge

      - name: Install dependencies
        shell: bash -l {0}
        run: |
          conda activate test
          conda install --yes -c conda-forge compilers gfortran
          conda install --yes \
            "numpy<2.0" \
            "pyparsing<=3.1.1" \
            scipy \
            nose \
            pytest \
            requests \
            pdbfixer \
            mdtraj \
            openmm
          conda install -c bioconda --yes clustalw
          pip install mmtf-python scikit-learn

      - name: Build & compile HPB (Linux)
        if: runner.os == 'Linux'
        shell: bash -l {0}
        run: |
          set -euxo pipefail
          conda activate test

          pushd prody/proteins/hpbmodule

          gfortran -O3 -fPIC -c reg_tet.f
          PYINC=$(python -c 'from distutils.sysconfig import get_python_inc; print(get_python_inc())')
          PYLIBDIR=$(python -c 'import sysconfig; print(sysconfig.get_config_var("LIBDIR"))')

          export LIBRARY_PATH="$CONDA_PREFIX/lib:$PYLIBDIR:$LIBRARY_PATH"

          g++ -O3 -g -fPIC -I"$PYINC" -c hpbmodule.cpp -o hpbmodule.o
          g++ -shared -o hpb.so hpbmodule.o reg_tet.o \
              -L"$PYLIBDIR" -L"$CONDA_PREFIX/lib" -lgfortran

          cp hpb.so ../
          popd

          pip install -e .
          python setup.py build_ext --inplace --force

      - name: Build & compile HPB (macOS)
        if: runner.os == 'macOS'
        shell: bash -l {0}
        run: |
          set -euxo pipefail
          conda activate test

          pushd prody/proteins/hpbmodule

          gfortran -O3 -fPIC -c reg_tet.f
          PYINC=$(python -c 'from distutils.sysconfig import get_python_inc; print(get_python_inc())')
          PYLIBDIR=$(python -c 'import sysconfig; print(sysconfig.get_config_var("LIBDIR"))')

          export LIBRARY_PATH="$CONDA_PREFIX/lib:$PYLIBDIR:$LIBRARY_PATH"

          g++ -O3 -g -fPIC -I"$PYINC" -c hpbmodule.cpp -o hpbmodule.o
          g++ -dynamiclib -undefined dynamic_lookup \
              -o hpb.so hpbmodule.o reg_tet.o \
              -L"$PYLIBDIR" -L"$CONDA_PREFIX/lib" -lgfortran

          cp hpb.so ../
          popd

          pip install -e .
          python setup.py build_ext --inplace --force

      - name: Run tests
        shell: bash -l {0}
        run: |
          conda activate test
          pytest -v
